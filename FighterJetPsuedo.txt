CLASS: FighterJet

    PUBLIC CLASS CONSTANTS:

    CLASS FIELDS:
        ordance (string)
        wingSpan (Real)

    COSTRUCTORS:

    Defualt:
        IMPORT: none
        EXPORT: none
        ASSERTION: a fighter jet with a serial number of 123.250, commisioned 
                   in 1950 with an ordance of "machine guns" and a wingspan
                   of 3 metres

        ALGORITHM:
            ordance := "machine guns"
            wingSpan := 3.0

    Alternate
        IMPORT: inSerialNum (Real), inYear (Interger), inOrdance (String),
                inWingSpan (Real), inEngine (Engine) 
        EXPORT: none
        ASSERTIONS: creteas a FighterJet object if its imports are valid, 
                    otherwise it fails

        ALGORITHM:
            super <- inSerialNum, inYear, inEngine
            IF (validateOrdance <- inOrdance) THEN
                IF (validateWingSpan <- inWingSpan) THEN
                    ordance := inOrdance
                    wingSpan := inWingSpan
                END IF 
            END IF 

    Copy:
        IMPORT: inFighterJet (FighterJet)
        EXPORT: none
        ASSERTION: creates an object which is identical to the imported object

        ALGORITHM:
            super <- inFighterJet
            ordance := inFighterJet.getOrdance <- none
            wingSpan := inFighterJet.getWingSpan <- none

    ACCESSORS

    SUBMODULE: get getOrdance
        IMPORT: none
        EXPORT: ordance (String)
        ASSERTION: returns the last set ordance

    SUBMODULE: getWingSpan
        IMPORT: none
        EXPORT: wingSpan
        ASSERTION: returns the last set wingspan

        MUTATORS:

    SUBMODULE: setOrdance
        IMPORT: inOrdance (String)
        EXPORT: none
        ASSERTION: set ordance to to inOrdance if it's valid, otherwise it will fail

        ALGORITHM:
            IF (validateOrdance <- inOrdance) THEN
                ordance := inOrdance
            END IF 

    SUBMODULE: setWingSpan
        IMPORT: inWingSpan (Real)
        EXPORT: none
        ASSERTION: set wingspan to inWingSpan if it's valid, otherwise

        ALGORITHM:
            IF (validateWingSpan <- inWingSpan) THEN
                wingSpan :=  inWingSpan
            END IF 

    DOING METHODS:

    SUBMODULE: calcTravelTime
        IMPORT: inShip (FighterJet object), distance (integer)
        EXPORT: timeHours (Real)
        PURPOSE: is to calculate the travel time of the fighter jet in hours
        
        ALGORITHM:
            
            (Real) denom := getWingSpan <- none * (Real)getEngine <- none.
                            getCylinders <- none * 150 
            (Real) timeHours = (Real) distance / denom

    PRIVATE SUBMODULES:

        SUBMODULE: validateOrdance
            IMPORT: inOrdance (String)
            EXPORT: isValid (boolean)
            ASSERTION: it will only validate inOrdance if it has a string 
                       describing the ordance of the fighter jet

            ALGORITHM:
               (Boolean) isValid := False
               
                IF (LENGTH of inOrdance doesn't equals to 0) THEN
                    isValid := True
                ELSE
                    FAIL("invalid ordance")
                END IF ELSE


        SUBMODULE: validateWingSpan
            IMPORT: inWingSpan (Real)
            EXPORT: isValid (Boolean)
            ASSERTION: a wingspan of between 2.2 and 25.6 will be valid 
                       otherwise, an error will be thrown to the user

            ALGORITHM:
                isValid := FALSE

                IF (2.20 <= inWingSpan <= 25.6) THEN
                    isValid := TRUE
                ELSE
                    FAIL("Invalid wingspan")
                END IF ELSE

    OTHER METHODS:

    SUBMODULE: clone
        IMPORT: none
        EXPORT: cloneFighterJet (Object)
        ASSERTION: returns a cloned object of the current object

        ALGORITHM:
            construct cloneFighterJet using this

    SUBMODULE: equals
        IMPORT: inObjct (object)
        EXPORT: isSame (boolean)
        ASSERTION: two fighter jets are interchangable if they have the same 
                   ordance, and wingspan

        ALGORITHM:
            isSame := FALSE
            IF (inObj ISA FighterJet) THEN
                inFighterJet  := (Convert to FighterJet)inObjct
                isSame := (ordance EQUALS inFighterJet.getOrdance <- none) AND
                          (wingSpan EQUALS inFighterJet.getWingSpan <- none) 
                          AND engine EQUALS getEngine <- none
            END IF


    SUBMODULE: toString
        IMPORT: none
        EXPORT: str (String)
        ASSERTION:

        ALGORITHM:

            str := super.toString <- none + getEngine <- none.toString <- none +
                  " It is a fighter jet with a wing span of " +wingSpan+ 
                  " metres and equiped wirh " +ordance+ "."

        SUBMODULE: toFileString
        IMPORT: none
        EXPORT: str (String) 
        ASSERTION:

        ALGOTITHM:

            str := "F," +super.toFileString <- none + "," + getEngine <- none
                   .toFileString <- none + "," + wingSpan + "," +ordance

